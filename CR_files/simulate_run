import h5py
import time
import os
import datetime
import configparser

# Configure these paths and parameters
WATCH_DIR = r"C:\Users\cleve\path\to\watched\directory"  # same as in your main script
RUN_COUNT = 3             # How many simulated runs to perform
RUN_DURATION = 2.0         # How long (in seconds) to "run" (i.e. keep modifying the file)
UPDATE_INTERVAL = 0.2      # How often to update the file during the run
PAUSE_BETWEEN_RUNS = 3.0   # Pause between runs to observe transitions

def simulate_run(run_number):
    timestamp = datetime.datetime.now().strftime("%Y%m%d_%H%M%S")
    filename = f"test_run_{run_number}_{timestamp}.h5"
    filepath = os.path.join(WATCH_DIR, filename)
    
    print(f"Creating file at: {filepath}")
    
    # Create an HDF5 file and write initial data
    with h5py.File(filepath, 'w') as f:
        f.create_dataset("initial_data", data=[1, 2, 3])
    
    print(f"Simulating run {run_number}: {filename}")
    
    start_time = time.time()
    update_count = 0
    while (time.time() - start_time) < RUN_DURATION:
        with h5py.File(filepath, 'a') as f:
            # Use unique dataset name for each update
            dataset_name = f"progress_{update_count}"
            f.create_dataset(dataset_name, data=[time.time()])
            update_count += 1
        time.sleep(UPDATE_INTERVAL)
    
    print(f"Run {run_number} complete: waiting {PAUSE_BETWEEN_RUNS} s before next run.")
    time.sleep(PAUSE_BETWEEN_RUNS)

if __name__ == "__main__":
    # Simulate several runs
    for i in range(1, RUN_COUNT + 1):
        simulate_run(i)
    print("All simulated runs completed.")

